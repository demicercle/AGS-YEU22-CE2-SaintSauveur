RotatingSprite rotatingSprites[100];
int spriteCount;

function RotatingSprite::Rotate()
{
  this.angle = (this.angle + this.speed);
  this.angle = this.angle % 360;
  while(this.angle < 0) this.angle = 360 + this.angle;
  
  this.dynSprite = DynamicSprite.CreateFromExistingSprite(this.slot);
  int w = this.dynSprite.Width;
  int h = this.dynSprite.Height;
    
  if(this.angle > 0 && this.angle < 360) this.dynSprite.Rotate(this.angle);
 
  // calculate sprite dimension change offset
  float xOff = IntToFloat(w - this.dynSprite.Width) / 2.0;
  float yOff = IntToFloat(this.dynSprite.Height - h) / 2.0;
 
  // calculate vector from pivot to center
  float vx = IntToFloat(w) / 2.0 - IntToFloat(this.px);
  float vy = IntToFloat(h) / 2.0 - IntToFloat(this.py);
  // rotate vector
  float rad = Maths.DegreesToRadians (IntToFloat (this.angle));
  float cos = Maths.Cos(rad);
  float sin = Maths.Sin(rad);
  float vrx = vx * cos - vy * sin;
  float vry = vx * sin + vy * cos;
  
  this.obj.Graphic = this.dynSprite.Graphic;
  this.obj.X = this.x + FloatToInt(xOff - vx + vrx, eRoundNearest);
  this.obj.Y = this.y + FloatToInt(yOff - vy + vry, eRoundNearest);
}

function StartRotation(Object *oSprite, int spriteSlot, int angle, int rotSpeed, int px, int py)
{
  rotatingSprites[spriteCount].obj = oSprite;
  rotatingSprites[spriteCount].slot = spriteSlot;
  rotatingSprites[spriteCount].speed = rotSpeed;
  rotatingSprites[spriteCount].angle = angle;
  rotatingSprites[spriteCount].px = px;
  rotatingSprites[spriteCount].py = py;
  rotatingSprites[spriteCount].x = oSprite.X;
  rotatingSprites[spriteCount].y = oSprite.Y;
  
  spriteCount++;
}

function StopRotation(Object *oSprite)
{
  for(int i = 0; i < 100; i++)
  {
    if(rotatingSprites[i].obj == oSprite)
    {
      rotatingSprites[i].obj.X = rotatingSprites[i].x;
      rotatingSprites[i].obj.Y = rotatingSprites[i].y;
      rotatingSprites[i].obj = null;
    }
  }
}

function repeatedly_execute_always()
{
  for(int i = 0; i < 100; i++)
  {
    Object *obj = rotatingSprites[i].obj;
    
    if(obj != null && obj.Visible)
    {
      rotatingSprites[i].Rotate();
    }
  }
}

function on_event(EventType event, int data)
{
  if(event == eEventEnterRoomBeforeFadein)
  {
    //for(int i = 0; i < 100; i++) rotatingSprites[i].obj = null;
    //spriteCount = 0;
  }
}